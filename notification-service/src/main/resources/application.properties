spring.application.name=notification-service
server.port=8083
spring.datasource.url=jdbc:h2:mem:notification-db
spring.h2.console.enabled=true
spring.cloud.discovery.enabled=true
spring.cloud.config.enabled=false
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
management.endpoints.web.exposure.include=*

#spring.cloud.stream.bindings.customerEventConsumer-in-0.destination=customer-topic
#spring.cloud.function.definition=customerEventConsumer
#spring.cloud.stream.kafka.bindings.customerEventConsumer-in-0.consumer.configuration.auto-offset-reset=earliest

# Kafka Consumer Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=notification-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=false

# Deserializers with error handling
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=order:com.fouadev.customerservice.event.CustomerEvent
